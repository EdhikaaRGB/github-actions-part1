# This is a basic workflow to help you get started with GitHub Actions

name: GitHub Actions Secret Example

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The first job in this workflow is named build-on-windows
  secrets-in-github-actions:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Step 1 - Echo out a GitHub Actions Secret to the logs
        run: |
          echo "The GitHub Action Secret will be masked: "
          echo ${{ secrets.SECRET_TOKEN }}
          echo "Trick to echo GitHub Actions Secret: "
          echo ${{secrets.SECRET_TOKEN}} | sed 's/./& /g'

      - name: Step 2 - Pring the GitHub Actions Secret variable
        env: 
          WHO_TO_TRUST: ${{ secrets.SECRET_TOKEN }}
        run: |
          echo "The GitHub Action Secret variable will be masked: "
          echo $WHO_TO_TRUST
          echo "Trick to echo GitHub Actions Secret variable: "
          echo $env.WHO_TO_TRUST | sed 's/./& /g'

      - name: Step 3 - GitHub Action if statement (true)
        env: 
          WHO_TO_TRUST: ${{ secrets.SECRET_TOKEN }}
        if:  env.WHO_TO_TRUST == 'TrustNo1'
        run: echo "I know what the secret token is!"

      # Note this example removes the optional env variable prefix
      - name: Step 4 - Conditional GitHub Action (false)
        shell: bash
        env: 
          WHO_TO_TRUST: ${{ secrets.SECRET_TOKEN }}
        if:  WHO_TO_TRUST != 'TrustNobody'
        run: echo "I was wrong thinking the GitHub secret was 'TrustNobody'!"

